{"version":3,"sources":["components/field.js","components/languages.js","components/translate.js","App.js","index.js"],"names":["label","value","onChange","className","e","target","LANGUAGES","Languages","language","onLanguageChange","undefined","languageConfig","find","l","Error","useState","open","setOpen","onClick","map","href","onSelect","doTranslation","input","languageCode","cancelToken","a","axios","post","q","token","data","translations","translatedText","text","translated","setTranslated","useEffect","CancelToken","source","then","cancel","err","App","setLanguage","setText","ReactDOM","render","document","getElementById"],"mappings":"2MAEe,G,MAAA,YAAiC,IAA9BA,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC9B,OACE,6BACE,+BAAQF,GACR,2BACEG,UAAU,QACVF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,aCLnCK,EAAY,CAChB,CAAEN,MAAO,YAAaC,MAAO,MAC7B,CAAED,MAAO,SAAUC,MAAO,MAC1B,CAAED,MAAO,SAAUC,MAAO,MAC1B,CAAED,MAAO,QAASC,MAAO,MACzB,CAAED,MAAO,WAAYC,MAAO,MAC5B,CAAED,MAAO,aAAcC,MAAO,MAC9B,CAAED,MAAO,UAAWC,MAAO,MAC3B,CAAED,MAAO,qBAAsBC,MAAO,SACtC,CAAED,MAAO,UAAWC,MAAO,MAC3B,CAAED,MAAO,UAAWC,MAAO,MAC3B,CAAED,MAAO,OAAQC,MAAO,OAmDXM,EAhDG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,sBACZC,IAAbF,IACFA,EAAW,MAEb,IAAMG,EAAiBL,EAAUM,MAAK,SAAAC,GAAC,OAAIA,EAAEZ,QAAUO,KACvD,IAAKG,EACH,MAAM,IAAIG,MAAJ,iCAAoCN,EAApC,MAN4C,MAS5BO,oBAAS,GATmB,mBAS7CC,EAT6C,KASvCC,EATuC,KAgBpD,OACE,6BACE,2BAAOd,UAAU,SAAjB,mBACA,yBAAKA,UAAS,mBAAca,GAAQ,cAClC,yBAAKb,UAAU,oBACb,4BAAQA,UAAU,SAASe,QAAS,kBAAMD,GAASD,KACjD,8BAAOL,EAAeX,OACtB,0BAAMG,UAAU,iBACd,uBAAGA,UAAU,yBAInB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,oBACZG,EAAUa,KAAI,YAAuB,IAApBnB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACvB,OACE,uBACEmB,KAAK,IACLF,QAAS,kBAvBR,SAAAV,GACfS,GAAQ,GACRR,EAAiBD,GAqBYa,CAASpB,IACxBE,UAAU,iBAETH,W,wCCpDbsB,EAAa,uCAAG,WAAOC,EAAOC,EAAcC,GAA5B,iBAAAC,EAAA,+EAEKC,IAAMC,KAC3B,uGACA,CACEC,EAAGN,EACHlB,OAAQmB,GAEV,CAAEC,YAAaA,EAAYK,QARX,uBAEVC,EAFU,EAEVA,KAFU,kBAWXA,EAAKA,KAAKC,aAAa,GAAGC,gBAXf,yDAaX,IAbW,yDAAH,0DAiBJ,cAAyB,IAAtBzB,EAAqB,EAArBA,SAAU0B,EAAW,EAAXA,KAAW,EACDnB,mBAAS,IADR,mBAC9BoB,EAD8B,KAClBC,EADkB,KAmBrC,OAhBAC,qBAAU,WACR,GAAKH,EAAL,CAIA,IAAMT,EAAcE,IAAMW,YAAYC,SAItC,OAFAjB,EAAcY,EAAM1B,EAAUiB,GAAae,KAAKJ,GAEzC,WACL,IACEX,EAAYgB,SACZ,MAAOC,SAEV,CAACR,EAAM1B,IAGR,6BACE,2BAAOL,UAAU,SAAjB,UACA,wBAAIA,UAAU,SAASgC,KCpCd,SAASQ,IAAO,IAAD,EACI5B,mBAAS,MADb,mBACrBP,EADqB,KACXoC,EADW,OAEJ7B,mBAAS,IAFL,mBAErBmB,EAFqB,KAEfW,EAFe,KAI5B,OACE,6BACE,kBAAC,EAAD,CAAO7C,MAAM,gBAAgBE,SAAU2C,EAAS5C,MAAOiC,IACvD,kBAAC,EAAD,CAAW1B,SAAUA,EAAUC,iBAAkBmC,IACjD,6BACA,kBAAC,EAAD,CAAWV,KAAMA,EAAM1B,SAAUA,KCXvCsC,IAASC,OAAO,kBAACJ,EAAD,MAASK,SAASC,eAAe,W","file":"static/js/main.5ddbdabe.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default ({ label, value, onChange }) => {\n  return (\n    <div>\n      <label>{label}</label>\n      <input\n        className=\"input\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n","/* eslint-disable */\n\nimport React, { useState } from \"react\";\n\nconst LANGUAGES = [\n  { label: \"Afrikaans\", value: \"af\" },\n  { label: \"Arabic\", value: \"ar\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"Hindi\", value: \"hi\" },\n  { label: \"Japanese\", value: \"ja\" },\n  { label: \"Portuguese\", value: \"pt\" },\n  { label: \"Russian\", value: \"ru\" },\n  { label: \"Simplified Chinese\", value: \"zh-CN\" },\n  { label: \"Spanish\", value: \"es\" },\n  { label: \"Swahili\", value: \"sw\" },\n  { label: \"Thai\", value: \"th\" }\n];\n\nconst Languages = ({ language, onLanguageChange }) => {\n  if (language === undefined) {\n    language = \"es\";\n  }\n  const languageConfig = LANGUAGES.find(l => l.value === language);\n  if (!languageConfig) {\n    throw new Error(`Unknown language code '${language}'`);\n  }\n\n  const [open, setOpen] = useState(false);\n\n  const onSelect = language => {\n    setOpen(false);\n    onLanguageChange(language);\n  };\n\n  return (\n    <div>\n      <label className=\"label\">Select Language</label>\n      <div className={`dropdown ${open && \"is-active\"}`}>\n        <div className=\"dropdown-trigger\">\n          <button className=\"button\" onClick={() => setOpen(!open)}>\n            <span>{languageConfig.label}</span>\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-angle-down\" />\n            </span>\n          </button>\n        </div>\n        <div className=\"dropdown-menu\">\n          <div className=\"dropdown-content\">\n            {LANGUAGES.map(({ label, value }) => {\n              return (\n                <a\n                  href=\"#\"\n                  onClick={() => onSelect(value)}\n                  className=\"dropdown-item\"\n                >\n                  {label}\n                </a>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Languages;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst doTranslation = async (input, languageCode, cancelToken) => {\n  try {\n    const { data } = await axios.post(\n      \"https://translation.googleapis.com/language/translate/v2?key=AIzaSyCf0Xy0OnhxlduyEt3K8zP-sOuu-l_u6uA\",\n      {\n        q: input,\n        target: languageCode\n      },\n      { cancelToken: cancelToken.token }\n    );\n\n    return data.data.translations[0].translatedText;\n  } catch (err) {\n    return \"\";\n  }\n};\n\nexport default ({ language, text }) => {\n  const [translated, setTranslated] = useState(\"\");\n\n  useEffect(() => {\n    if (!text) {\n      return;\n    }\n\n    const cancelToken = axios.CancelToken.source();\n\n    doTranslation(text, language, cancelToken).then(setTranslated);\n\n    return () => {\n      try {\n        cancelToken.cancel();\n      } catch (err) {}\n    };\n  }, [text, language]);\n\n  return (\n    <div>\n      <label className=\"label\">Output</label>\n      <h1 className=\"title\">{translated}</h1>\n    </div>\n  );\n};\n","import \"./styles.css\";\nimport React, { useState } from \"react\";\nimport Field from \"./components/field\";\nimport Languages from \"./components/languages\";\nimport Translate from \"./components/translate\";\n\nexport default function App() {\n  const [language, setLanguage] = useState(\"ru\");\n  const [text, setText] = useState(\"\");\n\n  return (\n    <div>\n      <Field label=\"Enter English\" onChange={setText} value={text} />\n      <Languages language={language} onLanguageChange={setLanguage} />\n      <hr />\n      <Translate text={text} language={language} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}